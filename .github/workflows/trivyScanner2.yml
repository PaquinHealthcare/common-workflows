on:
  workflow_call:
    inputs:
      RELEASE_REVISION:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      DEPLOYMENT:
        required: false
        type: string

name: Scan docker images for vulnerabilities

env:
  DOCKER_IMAGE: 190961777710.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.ECR_REPOSITORY }}:${{ inputs.RELEASE_REVISION }}
  DEPLOYMENT: ${{ secrets.DEPLOYMENT }}

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Pull docker image
      run: docker pull ${{ env.DOCKER_IMAGE }}

    - name: Set deployment name # if is different from secrets.DEPLOYMENT
      if: ${{ inputs.DEPLOYMENT }}
      run: echo "DEPLOYMENT=${{ inputs.DEPLOYMENT }}" >> $GITHUB_ENV

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_IMAGE }}
        format: 'sarif'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        output: ${{ env.DEPLOYMENT }}.log
        security-checks: vuln

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'